@page "/create"
@inject HttpClient httpclient
@inject NavigationManager navmanager
    <div class="row">
        <h3>Create</h3>
    </div>
    <div class="row">
        <button class="btn btn-success" @onclick="SubmitData">Save</button>&nbsp;|&nbsp;
        <button class="btn btn-warning" @onclick="@(()=>navmanager.NavigateTo(""))">Close</button>
        <p>&nbsp;</p>
    </div>
    <CreateForm order="@order" OrderTotal="@OrderTotal"></CreateForm>

<div class="row">
    <div class="col-md-5 ml-0">
        <div class="offset-8 mb-2">
            <button class="btn btn-primary" style="float:right" @onclick="DisplayDetail"><span class="oi oi-plus" aria-hidden="true"></span> Add</button>
        <p></p>
        </div>
        <div>
            <CreateDetailTable orderDetails="@orderDetails" _EditItem="@EditItem"> </CreateDetailTable>
        </div>
    </div>
</div>
<DialogTemplate Show="@ShowDialog">
    <DetailDialog  BtnText="@BtnText" 
                  OnCancel="CloseDetail" 
                  orderDetails="@orderDetails" 
                  orderDetail="@orderDetail">
    </DetailDialog>
</DialogTemplate>
@code {
    private bool ShowDialog;
    private Order order = new Order();
    private OrderDetail orderDetail=new OrderDetail();
    private List<OrderDetail> orderDetails = new List<OrderDetail>();
    private decimal OrderTotal { get => orderDetails.Sum(m => m.TotalPerItem); }
    public string BtnText { get; set; } = "add";
    protected override Task OnInitializedAsync()
    {
        var ran = new Random();
        order.OrderNumber = $"ITL{ran.Next(9999, 99999)}";
        return base.OnInitializedAsync();
    }
    private void DisplayDetail()
    {
        orderDetail=new OrderDetail();
        BtnText = "add";
        ShowDialog = true;
        StateHasChanged();
    }
    private void CloseDetail()
    {
        ShowDialog = false;
    }
    private void EditItem(OrderDetail detail)
    {
        BtnText = "update";
        ShowDialog = true;
        orderDetail = detail;
    }
    private async Task SubmitData()
    {
        if (string.IsNullOrEmpty(order.CustomerName) ||
            string.IsNullOrEmpty(order.PaymentMethod) ||
            orderDetails.Count() <= 0)
            return;
        order.Total = OrderTotal;
        order.OrderDetails = orderDetails;
        var res = await httpclient.PostJsonAsync<int>("Orders", order);
        if (res > 0)
            navmanager.NavigateTo("");
    }
}
